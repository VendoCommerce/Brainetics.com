//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace HitsLinkVisitorBySite.com.hitslink.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportWSSoap", Namespace="http://www.hitslink.com/")]
    public partial class ReportWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataFromTimeframeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataFromQueryStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportWS() {
            this.Url = global::HitsLinkVisitorBySite.Properties.Settings.Default.HitsLinkVisitorBySite_com_hitslink_www_ReportWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataFromTimeframeCompletedEventHandler GetDataFromTimeframeCompleted;
        
        /// <remarks/>
        public event GetDataFromQueryStringCompletedEventHandler GetDataFromQueryStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hitslink.com/GetData", RequestNamespace="http://www.hitslink.com/", ResponseNamespace="http://www.hitslink.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Data GetData(string account, string password, ReportsEnum reportId, int maxRows, int chartHeight, int chartWidth) {
            object[] results = this.Invoke("GetData", new object[] {
                        account,
                        password,
                        reportId,
                        maxRows,
                        chartHeight,
                        chartWidth});
            return ((Data)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string account, string password, ReportsEnum reportId, int maxRows, int chartHeight, int chartWidth) {
            this.GetDataAsync(account, password, reportId, maxRows, chartHeight, chartWidth, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string account, string password, ReportsEnum reportId, int maxRows, int chartHeight, int chartWidth, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        account,
                        password,
                        reportId,
                        maxRows,
                        chartHeight,
                        chartWidth}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hitslink.com/GetDataFromTimeframe", RequestNamespace="http://www.hitslink.com/", ResponseNamespace="http://www.hitslink.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Data GetDataFromTimeframe(string account, string password, ReportsEnum reportId, TimeFrameEnum timeframeType, System.DateTime startDate, System.DateTime endDate, int maxRows, int chartHeight, int chartWidth) {
            object[] results = this.Invoke("GetDataFromTimeframe", new object[] {
                        account,
                        password,
                        reportId,
                        timeframeType,
                        startDate,
                        endDate,
                        maxRows,
                        chartHeight,
                        chartWidth});
            return ((Data)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataFromTimeframeAsync(string account, string password, ReportsEnum reportId, TimeFrameEnum timeframeType, System.DateTime startDate, System.DateTime endDate, int maxRows, int chartHeight, int chartWidth) {
            this.GetDataFromTimeframeAsync(account, password, reportId, timeframeType, startDate, endDate, maxRows, chartHeight, chartWidth, null);
        }
        
        /// <remarks/>
        public void GetDataFromTimeframeAsync(string account, string password, ReportsEnum reportId, TimeFrameEnum timeframeType, System.DateTime startDate, System.DateTime endDate, int maxRows, int chartHeight, int chartWidth, object userState) {
            if ((this.GetDataFromTimeframeOperationCompleted == null)) {
                this.GetDataFromTimeframeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataFromTimeframeOperationCompleted);
            }
            this.InvokeAsync("GetDataFromTimeframe", new object[] {
                        account,
                        password,
                        reportId,
                        timeframeType,
                        startDate,
                        endDate,
                        maxRows,
                        chartHeight,
                        chartWidth}, this.GetDataFromTimeframeOperationCompleted, userState);
        }
        
        private void OnGetDataFromTimeframeOperationCompleted(object arg) {
            if ((this.GetDataFromTimeframeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataFromTimeframeCompleted(this, new GetDataFromTimeframeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hitslink.com/GetDataFromQueryString", RequestNamespace="http://www.hitslink.com/", ResponseNamespace="http://www.hitslink.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Data GetDataFromQueryString(string account, string password, string queryString, int chartHeight, int chartWidth) {
            object[] results = this.Invoke("GetDataFromQueryString", new object[] {
                        account,
                        password,
                        queryString,
                        chartHeight,
                        chartWidth});
            return ((Data)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataFromQueryStringAsync(string account, string password, string queryString, int chartHeight, int chartWidth) {
            this.GetDataFromQueryStringAsync(account, password, queryString, chartHeight, chartWidth, null);
        }
        
        /// <remarks/>
        public void GetDataFromQueryStringAsync(string account, string password, string queryString, int chartHeight, int chartWidth, object userState) {
            if ((this.GetDataFromQueryStringOperationCompleted == null)) {
                this.GetDataFromQueryStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataFromQueryStringOperationCompleted);
            }
            this.InvokeAsync("GetDataFromQueryString", new object[] {
                        account,
                        password,
                        queryString,
                        chartHeight,
                        chartWidth}, this.GetDataFromQueryStringOperationCompleted, userState);
        }
        
        private void OnGetDataFromQueryStringOperationCompleted(object arg) {
            if ((this.GetDataFromQueryStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataFromQueryStringCompleted(this, new GetDataFromQueryStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public enum ReportsEnum {
        
        /// <remarks/>
        TopPages,
        
        /// <remarks/>
        LatestVisitors,
        
        /// <remarks/>
        TrafficDailyHistory,
        
        /// <remarks/>
        TrafficHourlyHistory,
        
        /// <remarks/>
        TrafficWeeklyHistory,
        
        /// <remarks/>
        TrafficMonthlyHistory,
        
        /// <remarks/>
        TrafficQuarterlyHistory,
        
        /// <remarks/>
        TrafficYearlyHistory,
        
        /// <remarks/>
        PageViewHistoryHourly,
        
        /// <remarks/>
        PageViewHistoryDaily,
        
        /// <remarks/>
        PageViewHistoryWeekly,
        
        /// <remarks/>
        PageViewHistoryMonthly,
        
        /// <remarks/>
        PageViewHistoryQuarterly,
        
        /// <remarks/>
        PageViewHistoryYearly,
        
        /// <remarks/>
        UniqueVisitorHistoryHourly,
        
        /// <remarks/>
        UniqueVisitorHistoryDaily,
        
        /// <remarks/>
        UniqueVisitorHistoryWeekly,
        
        /// <remarks/>
        UniqueVisitorHistoryMonthly,
        
        /// <remarks/>
        UniqueVisitorHistoryQuarterly,
        
        /// <remarks/>
        UniqueVisitorHistoryYearly,
        
        /// <remarks/>
        NewVisitorHistoryHourly,
        
        /// <remarks/>
        NewVisitorHistoryDaily,
        
        /// <remarks/>
        NewVisitorHistoryWeekly,
        
        /// <remarks/>
        NewVisitorHistoryMonthly,
        
        /// <remarks/>
        NewVisitorHistoryQuarterly,
        
        /// <remarks/>
        NewVisitorHistoryYearly,
        
        /// <remarks/>
        PageViewTrendDaily,
        
        /// <remarks/>
        TopPagesTrend,
        
        /// <remarks/>
        LatestPageViews,
        
        /// <remarks/>
        VisitorPages,
        
        /// <remarks/>
        AveragePageViewsHourly,
        
        /// <remarks/>
        AveragePageViewsDaily,
        
        /// <remarks/>
        AveragePageViewsWeekly,
        
        /// <remarks/>
        AveragePageViewsMonthly,
        
        /// <remarks/>
        AveragePageViewsQuarterly,
        
        /// <remarks/>
        AveragePageViewsYearly,
        
        /// <remarks/>
        VisitorDomainSearch,
        
        /// <remarks/>
        VisitorDomains,
        
        /// <remarks/>
        VisitorMajorDomains,
        
        /// <remarks/>
        NavigationPaths,
        
        /// <remarks/>
        NavigationPathsDetail,
        
        /// <remarks/>
        EntryPages,
        
        /// <remarks/>
        ExitPages,
        
        /// <remarks/>
        AverageTimeSpentOnPages,
        
        /// <remarks/>
        Reloads,
        
        /// <remarks/>
        ReferringSites,
        
        /// <remarks/>
        ReferringSitesDetail,
        
        /// <remarks/>
        SearchEngines,
        
        /// <remarks/>
        SearchEnginesTrendDaily,
        
        /// <remarks/>
        SearchKeywords,
        
        /// <remarks/>
        SearchKeywordsTrendDaily,
        
        /// <remarks/>
        KeywordsBySearchEngine,
        
        /// <remarks/>
        KeywordsBySearchEngineTrendDaily,
        
        /// <remarks/>
        SearchEngineHistoryDaily,
        
        /// <remarks/>
        SearchEngineHistoryWeekly,
        
        /// <remarks/>
        SearchEngineHistoryMonthly,
        
        /// <remarks/>
        SearchEngineHistoryQuarterly,
        
        /// <remarks/>
        SearchEngineHistoryYearly,
        
        /// <remarks/>
        ReferringMajorDomains,
        
        /// <remarks/>
        VisitorCountries,
        
        /// <remarks/>
        ReferringCountries,
        
        /// <remarks/>
        HourOfDaySummary,
        
        /// <remarks/>
        DayOfWeekSummary,
        
        /// <remarks/>
        DayOfMonthSummary,
        
        /// <remarks/>
        Browsers,
        
        /// <remarks/>
        BrowserVersions,
        
        /// <remarks/>
        BrowserVersionsTrend,
        
        /// <remarks/>
        OperatingSystems,
        
        /// <remarks/>
        OperatingSystemsTrend,
        
        /// <remarks/>
        ScreenResolutions,
        
        /// <remarks/>
        Palettes,
        
        /// <remarks/>
        Languages,
        
        /// <remarks/>
        ScriptVersions,
        
        /// <remarks/>
        JavaSupport,
        
        /// <remarks/>
        CookieSupport,
        
        /// <remarks/>
        eCommerceActivitySummary,
        
        /// <remarks/>
        eCommerceTransactions,
        
        /// <remarks/>
        eCommerceLatestTransactions,
        
        /// <remarks/>
        eCommerceTransactionHistoryHourly,
        
        /// <remarks/>
        eCommerceTransactionHistoryDaily,
        
        /// <remarks/>
        eCommerceTransactionHistoryWeekly,
        
        /// <remarks/>
        eCommerceTransactionHistoryMonthly,
        
        /// <remarks/>
        eCommerceTransactionHistoryQuarterly,
        
        /// <remarks/>
        eCommerceTransactionHistoryYearly,
        
        /// <remarks/>
        eCommerceClickHistoryHourly,
        
        /// <remarks/>
        eCommerceClickHistoryDaily,
        
        /// <remarks/>
        eCommerceClickHistoryWeekly,
        
        /// <remarks/>
        eCommerceClickHistoryMonthly,
        
        /// <remarks/>
        eCommerceClickHistoryQuarterly,
        
        /// <remarks/>
        eCommerceClickHistoryYearly,
        
        /// <remarks/>
        eCommerceActivityBySearchEngine,
        
        /// <remarks/>
        eCommerceActivityBySearchTerms,
        
        /// <remarks/>
        eCommerceActivityBySearchEngineAndTerms,
        
        /// <remarks/>
        eCommerceActivityByReferrer,
        
        /// <remarks/>
        eCommerceActivityByCountry,
        
        /// <remarks/>
        eCommerceActivityByContinent,
        
        /// <remarks/>
        eCommerceActivityByEntryPage,
        
        /// <remarks/>
        eCommerceTransactionCycleTime,
        
        /// <remarks/>
        eCommerceTimeBetweenTransactions,
        
        /// <remarks/>
        eCommerceConversionRateHourly,
        
        /// <remarks/>
        eCommerceConversionRateDaily,
        
        /// <remarks/>
        eCommerceConversionRateWeekly,
        
        /// <remarks/>
        eCommerceConversionRateMonthly,
        
        /// <remarks/>
        eCommerceConversionRateQuarterly,
        
        /// <remarks/>
        eCommerceConversionRateYearly,
        
        /// <remarks/>
        eCommerceAverageOrderSizeDaily,
        
        /// <remarks/>
        eCommerceAverageOrderSizeWeekly,
        
        /// <remarks/>
        eCommerceAverageOrderSizeMonthly,
        
        /// <remarks/>
        eCommerceAverageOrderSizeQuarterly,
        
        /// <remarks/>
        eCommerceAverageOrderSizeYearly,
        
        /// <remarks/>
        eCommerceFirstTimeCustomersDaily,
        
        /// <remarks/>
        eCommerceFirstTimeCustomersWeekly,
        
        /// <remarks/>
        eCommerceFirstTimeCustomersMonthly,
        
        /// <remarks/>
        eCommerceFirstTimeCustomersQuarterly,
        
        /// <remarks/>
        eCommerceFirstTimeCustomersYearly,
        
        /// <remarks/>
        eCommerceRepeatCustomersDaily,
        
        /// <remarks/>
        eCommerceRepeatCustomersWeekly,
        
        /// <remarks/>
        eCommerceRepeatCustomersMonthly,
        
        /// <remarks/>
        eCommerceRepeatCustomersQuarterly,
        
        /// <remarks/>
        eCommerceRepeatCustomersYearly,
        
        /// <remarks/>
        PagesBySearchEngine,
        
        /// <remarks/>
        PagesByKeywords,
        
        /// <remarks/>
        PagesBySearchEngineAndKeywords,
        
        /// <remarks/>
        RepeatVisitors,
        
        /// <remarks/>
        AverageTimeSpentOnSite,
        
        /// <remarks/>
        MarketShareBrowsers,
        
        /// <remarks/>
        MarketShareSearchEngines,
        
        /// <remarks/>
        eCommerceRepeatClicks,
        
        /// <remarks/>
        eCommerceLatestClicks,
        
        /// <remarks/>
        eCommerceClicksByCountry,
        
        /// <remarks/>
        MarketShareBrowsersTrend,
        
        /// <remarks/>
        MarketShareSearchEnginesTrend,
        
        /// <remarks/>
        MarketShareOperatingSystems,
        
        /// <remarks/>
        MarketShareOperatingSystemsTrend,
        
        /// <remarks/>
        SearchTermSuggestions,
        
        /// <remarks/>
        LatestVisitorsNoScript,
        
        /// <remarks/>
        eCommerceActivityByCity,
        
        /// <remarks/>
        ExitLinks,
        
        /// <remarks/>
        Downloads,
        
        /// <remarks/>
        NavigationPathsDetailFrom,
        
        /// <remarks/>
        AccountInfo,
        
        /// <remarks/>
        NavigationToUnformatted,
        
        /// <remarks/>
        SearchTermsByPageUnformatted,
        
        /// <remarks/>
        AverageTimeSpentOnPage,
        
        /// <remarks/>
        PageGroups,
        
        /// <remarks/>
        PageGroupDetails,
        
        /// <remarks/>
        SingleAccessPage,
        
        /// <remarks/>
        PageGroupsTraffic,
        
        /// <remarks/>
        PageGroupsTrafficDetail,
        
        /// <remarks/>
        UsersAccess,
        
        /// <remarks/>
        UserGroups,
        
        /// <remarks/>
        UserGroupsView,
        
        /// <remarks/>
        LatestVisitorsProfile,
        
        /// <remarks/>
        LatestVisitorsPlatinum,
        
        /// <remarks/>
        FunnelAnalysis,
        
        /// <remarks/>
        OperatingSystemGroups,
        
        /// <remarks/>
        SearchEngineGroups,
        
        /// <remarks/>
        BrowserGroups,
        
        /// <remarks/>
        MarketShareResolutions,
        
        /// <remarks/>
        MultiVariate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public partial class Data {
        
        private string titleField;
        
        private System.DateTime endDateField;
        
        private System.DateTime startDateField;
        
        private string chartURLField;
        
        private ColumnDefinition[] columnDefinitionsField;
        
        private Row[] rowsField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string ChartURL {
            get {
                return this.chartURLField;
            }
            set {
                this.chartURLField = value;
            }
        }
        
        /// <remarks/>
        public ColumnDefinition[] ColumnDefinitions {
            get {
                return this.columnDefinitionsField;
            }
            set {
                this.columnDefinitionsField = value;
            }
        }
        
        /// <remarks/>
        public Row[] Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public partial class ColumnDefinition {
        
        private string titleField;
        
        private AlignmentTypes alignField;
        
        private bool sortableField;
        
        private DataTypes dataTypeField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public AlignmentTypes Align {
            get {
                return this.alignField;
            }
            set {
                this.alignField = value;
            }
        }
        
        /// <remarks/>
        public bool Sortable {
            get {
                return this.sortableField;
            }
            set {
                this.sortableField = value;
            }
        }
        
        /// <remarks/>
        public DataTypes DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public enum AlignmentTypes {
        
        /// <remarks/>
        Left,
        
        /// <remarks/>
        Right,
        
        /// <remarks/>
        Center,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public enum DataTypes {
        
        /// <remarks/>
        DataTypeString,
        
        /// <remarks/>
        DataTypeInteger,
        
        /// <remarks/>
        DataTypeNumeric,
        
        /// <remarks/>
        DataTypeCurrency,
        
        /// <remarks/>
        DataTypePercent,
        
        /// <remarks/>
        DataTypeDate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public partial class Column {
        
        private string valueField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public partial class Row {
        
        private Column[] columnsField;
        
        /// <remarks/>
        public Column[] Columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.hitslink.com/")]
    public enum TimeFrameEnum {
        
        /// <remarks/>
        Hourly,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Quarterly,
        
        /// <remarks/>
        Yearly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Data Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Data)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataFromTimeframeCompletedEventHandler(object sender, GetDataFromTimeframeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataFromTimeframeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataFromTimeframeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Data Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Data)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataFromQueryStringCompletedEventHandler(object sender, GetDataFromQueryStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataFromQueryStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataFromQueryStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Data Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Data)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591